openapi: 3.0.3
info:
  title: BoxPractice API
  description: The API of the BoxPractice Service
  contact:
    email: liuerfire@gmail.com
  version: 1.0.11
servers:
  - url: http://localhost:8080/api
tags:
  - name: hospital
    description: Operations about hospital
  - name: employee
    description: Operations about employee
  - name: task
    description: Operations about task
paths:
  /hospitals:
    post:
      tags:
        - hospital
      summary: Create a hospital
      operationId: createHospital
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hospital'
            examples:
              foo:
                value:
                  name: foo
                  displayName: foo hospital
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hospital'
    get:
      tags:
        - hospital
      summary: Get a list of hospitals
      operationId: listHospitals
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalList'
  /hospitals/{id}:
    get:
      tags:
        - hospital
      summary: Get details of a hospital
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hospital'
    put:
      tags:
        - hospital
      summary: Update a hospital
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hospital'
            examples:
              foo:
                value:
                  name: foo
                  displayName: foo hospital
        required: true
      responses:
        '200':
          description: Successful operation
  /hospitals/{id}/employees:
    post:
      tags:
        - employee
      summary: Create a employee
      operationId: creatEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
            examples:
              foo:
                value:
                  username: foo
                  firstName: foo name
                  lastName: bar name
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
    get:
      tags:
        - employee
      summary: Get a list of Employee
      operationId: listEmployees
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeList'
  /employees/{id}:
    get:
      tags:
        - employee
      summary: Get a employee
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /hospitals/{id}/tasks:
    get:
      tags:
        - task
      summary: list tasks of a hospital
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
    post:
      tags:
        - task
      summary: create a task
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
            examples:
              foo:
                value:
                  ownerId: 10
                  title: task
                  description: task desc
                  priority: LOW
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /employees/{id}/tasks:
    get:
      tags:
        - task
      summary: list tasks of a employee
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
  /tasks/{id}:
    put:
      tags:
        - task
      summary: update a task
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
            examples:
              foo:
                value:
                  ownerId: 10
                  title: task
                  description: task desc
                  priority: LOW
        required: true
      responses:
        '200':
          description: Successful operation
  /tasks/{id}/assign:
    post:
      tags:
        - task
      summary: assign a task to a employee
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerId:
                  type: integer
                  format: int64
            examples:
              foo:
                value:
                  ownerId: 11
        required: true
      responses:
        '200':
          description: Successful operation
components:
  parameters:
  schemas:
    Hospital:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "foo"
        displayName:
          type: string
          example: "foo hospital"
        createdAt:
          type: string
          format: date-time
    HospitalList:
      type: object
      properties:
        total:
          type: integer
          example: 10
        items:
          type: array
          items:
            $ref: '#/components/schemas/Hospital'
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        hospitalId:
          type: integer
          format: int64
          example: 20
        username:
          type: string
          example: "rikka"
        firstName:
          type: string
          example: "Rikka"
        lastName:
          type: string
          example: "Takanashi"
        createdAt:
          type: string
          format: date-time
    EmployeeList:
      type: object
      properties:
        total:
          type: integer
          example: 10
        items:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        hospitalId:
          type: integer
          format: int64
          example: 20
        ownerId:
          type: integer
          format: int64
          example: 30
        title:
          type: string
          example: "demo task"
        description:
          type: string
          example: "this is a demo"
        priority:
          type: string
          enum:
            - URGENT
            - HIGHT
            - LOW
        status:
          type: string
          enum:
            - OPEN
            - FAILED
            - COMPLETED
        createdAt:
          type: string
          format: date-time
    TaskList:
      type: object
      properties:
        total:
          type: integer
          example: 10
        items:
          type: array
          items:
            $ref: '#/components/schemas/Task'
